Users

Get

http://coms-3090-013.class.las.iastate.edu:8080/users
Gets all users

http://coms-3090-013.class.las.iastate.edu:8080/users/{id}
Get one user by ID

http://coms-3090-013.class.las.iastate.edu:8080/users/username/{username}
Get one user by Username

Put

http://coms-3090-013.class.las.iastate.edu:8080/users/passwordReset/{username}/{newPassword}
Replaces password for user with given username

http://coms-3090-013.class.las.iastate.edu:8080/users/usernameReset/{username}/{newUsername}
Replaces username for user with given username

http://coms-3090-013.class.las.iastate.edu:8080/users/emailReset/{username}/{newEmail}
Replaces email for user with given username

http://coms-3090-013.class.las.iastate.edu:8080/users/{id}
Replaces the user of this ID with the given user in the request body. 

Post

http://coms-3090-013.class.las.iastate.edu:8080/users
Saves user in the request body to the database.

Delete

http://coms-3090-013.class.las.iastate.edu:8080/users/{id}
Deletes the user of the given ID

http://coms-3090-013.class.las.iastate.edu:8080/users/{username}
Deletes the user of the given username


Cosmetics
Get
http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/getAll/{id}
Get the cosmetics list of the user of ID

http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/getAll/user/{username}
Get the cosmetics wormbox of the user of this username

http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/getAllSkins/user/{username}
Get the list of skin names for this user

http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/getWormbucks/{username}
Get the wormbucks amount of the user


Post
http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/
Creates a Cosmetics container for the User in the request body

Put
http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/add/user/{username}
Adds a Skin (given in request body) to the user with this username

http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/remove/user/{username}
Remove the given skin (given in request body) to the user with this ID

http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/setWormbucks/{username}
Sets the wormbucks up/down by the amount in the request body

Delete
http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/{username}
Deletes the skin container for this username.

Skin Selection
Get
http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/getSelected/{username}
returns the string of the name of the user's selected skin.

Put
http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/setSelected/{color}/{username}
Sets the selected skin of the user given to the color given. Will return a Boolean indicating success - 
false if count for that skin is 0, or if it's an invalid worm skin.

Marketplace
Get
http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/getMarket
returns the marketplace object

http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/getPrice
Get the price array for the skins

http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/getSellPrice
Get the sale price array for the skins 

Put

http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/buyMarket/{color}/{username}
Buy the skin of color from the market if the user has enough wormbucks (logic in backend for this)

http://coms-3090-013.class.las.iastate.edu:8080/cosmetics/sellMarket/{color}/{username}
Sell the skin of color to the market if the user has that skin of that color

Leaderboard 
Get
http://coms-3090-013.class.las.iastate.edu:8080/leaderboard/leaders
returns the top 10 users


http://coms-3090-013.class.las.iastate.edu:8080/leaderboard/wall-of-shame
returns the bottom 10 users

http://coms-3090-013.class.las.iastate.edu:8080/leaderboard/rank/{username}
Retrieve and individual's user rank by score

http://coms-3090-013.class.las.iastate.edu:8080/leaderboard/hall-of-fame
Retrieve the leaderboard for most consecutive wins

Put

http://coms-3090-013.class.las.iastate.edu:8080/leaderboard/leaderboard/{username}
Updates the leaderboard entry with the entry from the request body for username

Post

http://coms-3090-013.class.las.iastate.edu:8080/leaderboard
Create a leaderboard entry for the user

Delete

http://coms-3090-013.class.las.iastate.edu:8080/leaderboard/{username}
delete a user's leaderboard entry


Club 

Post
("http://coms-3090-013.class.las.iastate.edu:8080/club/create/{clubname}")
Creates a Club with the name path var clubname and adds an initial User listed in the Reqeust Body

Get
("http://coms-3090-013.class.las.iastate.edu:8080/club/get/{id}")
Returns information of the club with given club id: path var {id}

("http://coms-3090-013.class.las.iastate.edu:8080/club/getByClubname/{clubname}")
Returns information of the club with given club name: path var {clubname}

("http://coms-3090-013.class.las.iastate.edu:8080/club/getAll")
Get all clubs in a list format

Put
("http://coms-3090-013.class.las.iastate.edu:8080/club/addUser/{id}")
Add a User (give their username in the request body) to the given club by id with this path var {id}

("http://coms-3090-013.class.las.iastate.edu:8080/club/addUserByClubname/{clubname}")
Add a User (give their username in the request body) to the given club with this name path var {clubname}


("http://coms-3090-013.class.las.iastate.edu:8080/club/deleteUser/{id}")
Delete a User (give their username in the request body) from the given club by id with this path var {id}

("http://coms-3090-013.class.las.iastate.edu:8080/club/addUserByClubname/{clubname}")
Delete a User (give their username in the request body) from the given club with this name path var {clubname}

Bets

Post
("http://coms-3090-013.class.las.iastate.edu:8080/placeBet")
Requires Bet object in request body consisting of following parmeters:
this.amount = amount;
this.positionBet = positionBet;
this.mult = mult;
this.username = username;
this.lobbyId = lobbyId;

Get
("http://coms-3090-013.class.las.iastate.edu:8080/getPrevBet/{username}")
Gets the value of the user's previous bet (negative or positive)

Delete
("http://coms-3090-013.class.las.iastate.edu:8080/cashoutBets/{winPos}")
Path param winPos - String of the player position that won the game. 
Goes through the entire list of bets and gives that user money if they won.


Achievements
Get
("http://coms-3090-013.class.las.iastate.edu:8080/achievements/{username}")
Get all the information about the user's achievements - tiers for each achievement, title for each, description of each, count arrays of required value for each tier

Get
("http://coms-3090-013.class.las.iastate.edu:8080/achievements/getNextTiers/{username}")
Returns a decimal array 0-1 representing how close to next tier. Gives 1 if no higher tier.

Get 
("http://coms-3090-013.class.las.iastate.edu:8080/achievements/getSelected/{username})
Gets the selected title for the user as a string

Get
("http://coms-3090-013.class.las.iastate.edu:8080/achievements/getNames")
Gets the names of all the achievements, this is the same for all accounts.

Get
("http://coms-3090-013.class.las.iastate.edu:8080/achievements/getDescription")
Gets the descriptions of all the achievements, this is the same for all accounts.



Put
("http://coms-3090-013.class.las.iastate.edu:8080/achievements/setSelected/{username}/{title}")
Sets the selected title to the value given for the user. Gives Boolean true/false if successful, and is false if the title is not within possible array, or the user doesn't have tier 1 or higher for that title.
